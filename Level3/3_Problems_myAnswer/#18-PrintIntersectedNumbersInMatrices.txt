#include <iostream>
#include <iomanip>
using namespace std;

int ReadPositiveNumber(string Message)
{
	int Number = 0;

	do
	{
		cout << Message << endl;
		cin >> Number;

	} while (Number <= 0);

	return Number;
}

void PrintMatrix(int matrix[3][3], short Rows, short Cols)
{
	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Cols; j++)
		{
			printf("%d\t", matrix[i][j]);
		}
		cout << endl;
	}

	cout << "\n";
}

int RandomNumber(int From, int To)
{
	// Function to generate a random number

	int randNum = rand() % (To - From + 1) + From;
	return randNum;
}

void FillMatrixWithRandomNumbers(int arr[3][3], short Rows, short Cols)
{
	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Cols; j++)
		{
			arr[i][j] = RandomNumber(1, 20);
		}
	}
}

bool IsNumberExistsInMatrix(int matrix1[3][3], short Rows, short Cols, int Number)
{
	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Cols; j++)
		{
			if (Number == matrix1[i][j])
			{
				return true;
			}
		}
	}

	return false;
}

void PrintIntersectedNumbersInMatrices(int matrix1[3][3], int matrix2[3][3], short Rows, short Cols)
{
	int Number;

	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Cols; j++)
		{
			Number = matrix1[i][j];

			if (IsNumberExistsInMatrix(matrix2, 3, 3, Number))
			{
				cout << setw(3) << Number << "\t";
			}
		}
	}


}

int main()
{
	// Seeds the random number generator in C++ , called only once
	srand((unsigned)time(NULL));

	int matrix1[3][3], matrix2[3][3];

	cout << "Matrix1: " << endl;
	FillMatrixWithRandomNumbers(matrix1, 3, 3);
	PrintMatrix(matrix1, 3, 3);

	cout << "Matrix2: " << endl;
	FillMatrixWithRandomNumbers(matrix2, 3, 3);
	PrintMatrix(matrix2, 3, 3);

	cout << "Intersected NUmbers are :" << endl;
	PrintIntersectedNumbersInMatrices(matrix1, matrix2, 3, 3);

	system("pause>0");

	return 0;

}