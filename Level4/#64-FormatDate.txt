
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
using namespace std;

struct sDate
{
	short Year;
	short Month;
	short Day;
};

short ReadYear()
{
	short Year = 0;
	cout << "Please Enter a year? ";
	cin >> Year;
	return Year;
}

short ReadMonth()
{
	short Number = 0;
	cout << "Please Enter a month? ";
	cin >> Number;
	return Number;
}

short ReadDay()
{
	short Day = 0;
	cout << "Please Enter a day? ";
	cin >> Day;
	return Day;
}

sDate ReadFullDate()
{
	sDate Date;

	Date.Day = ReadDay();
	Date.Month = ReadMonth();
	Date.Year = ReadYear();


	return Date;
}

string ReadStringDate(string Message)
{
	string S1;
	cout << Message;
	getline(cin >> ws, S1);
	return S1;
}


bool isLeapYear(short Year)
{
	return (Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0);

}

int NumberOfDaysInMonths(short Month, short Year)
{
	if (Month < 1 || Month > 12)
		return 0;

	short DaysInMonths[12] = { 31,28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	return (Month == 2) ? (isLeapYear(Year) ? 29 : 28) : DaysInMonths[Month - 1];

}

string LowerAllString(string S1)
{
	for (int i = 0; i < S1.length(); i++)
	{
		S1[i] = tolower(S1[i]);
	}
	return S1;
}

string JoinString(vector <string> vString, string Delim)
{
	string S1;

	for (string string : vString)
	{
		S1 += string + Delim;
	}

	return S1.substr(0, S1.length() - Delim.length());
}

vector <string> SplitString(string S1, string delim)
{
	vector <string> vString;
	short pos = 0;
	string sWord;

	while ((pos = S1.find(delim)) != string::npos)
	{
		sWord = S1.substr(0, pos); // strore the word
		if (sWord != "")
		{
			vString.push_back(sWord);
		}

		S1.erase(0, pos + delim.length());
	}

	if (S1 != "")
	{
		vString.push_back(S1);
	}

	return vString;

}

string ReplaceWordInString(string S1, string StringToReplace, string ReplaceTo)
{
	short pos = S1.find(StringToReplace);

	while (pos != string::npos)
	{
		S1 = S1.replace(pos, StringToReplace.length(), ReplaceTo);
		pos = S1.find(StringToReplace); // find next 
	}

	return S1;
}

sDate StringToDate(string DateString)
{
	vector <string> vDate = SplitString(DateString, "/");

	sDate Date;

	Date.Day = stoi(vDate[0]);
	Date.Month = stoi(vDate[1]);
	Date.Year = stoi(vDate[2]);

	return Date;
}

string DateToString(sDate Date)
{
	return to_string(Date.Day) + "/" + to_string(Date.Month) + "/" + to_string(Date.Year);
}

string FormatDate(sDate Date, string DateFormat = "dd/mm/yyyy")
{
	string FormattedDateString = "";

	FormattedDateString = ReplaceWordInString(DateFormat, "dd", to_string(Date.Day));
	FormattedDateString = ReplaceWordInString(FormattedDateString, "mm", to_string(Date.Month));
	FormattedDateString = ReplaceWordInString(FormattedDateString, "yyyy", to_string(Date.Year));

	return FormattedDateString;
}

int main()
{

	string SringDate = ReadStringDate("Please enter date dd/mm/yyyy? ");

	sDate Date = StringToDate(SringDate);

	cout << endl << FormatDate(Date, "yyyy/mm/dd") << endl;
	cout << endl << FormatDate(Date, "dd-mm-yyyy") << endl;
	cout << endl << FormatDate(Date, "yyyy_mm_dd") << endl;
	cout << endl << FormatDate(Date, "Day is dd , month is mm , year is yyyy") << endl;

	return 0;
}