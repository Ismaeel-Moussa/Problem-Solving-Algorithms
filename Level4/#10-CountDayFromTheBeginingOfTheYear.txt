#include <iostream>
using namespace std;


short ReadYear()
{
	short Year = 0;
	cout << "Please Enter a year? ";
	cin >> Year;
	return Year;
}

short ReadMonth()
{
	short Number = 0;
	cout << "Please Enter a month? ";
	cin >> Number;
	return Number;
}

short ReadDay()
{
	short Day = 0;
	cout << "Please Enter a day? ";
	cin >> Day;
	return Day;
}

bool isLeapYear(short Year)
{
	return (Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0);

}

int NumberOfDaysInMonths(short Month, short Year)
{
	if (Month < 1 || Month > 12)
		return 0;

	short DaysInMonths[12] = { 31,28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	return (Month == 2) ? (isLeapYear(Year) ? 29 : 28) : DaysInMonths[Month - 1];
}

short DayOfWeekOrder(short Day, short Month, short Year)
{
	short a, y, m;
	a = (14 - Month) / 12;
	y = Year - a;
	m = Month + (12 * a) - 2;

	//for the gregorian calendar
	// 0 sun , 1 mon , 2, tue ...etc

	return (Day + y + (y / 4) - (y / 100) + (y / 400) + ((31 * m) / 12)) % 7;

}

short NumberOfDaysFromTheBeginingOfYear(short Day, short Month, short Year)
{
	short TotalDays = 0;
	for (int i = 1; i <= Month - 1; i++)
	{
		TotalDays += NumberOfDaysInMonths(i, Year);
	}

	TotalDays += Day;

	return TotalDays;
}


int main()
{
	short Day = ReadDay();
	short Month = ReadMonth();
	short Year = ReadYear();

	cout << "Number of days from the begining of year is " << NumberOfDaysFromTheBeginingOfYear(Day, Month, Year);


	return 0;
}